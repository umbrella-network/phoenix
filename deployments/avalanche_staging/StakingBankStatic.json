{
  "address": "0xBb57A6e58E999b1020723e86F9ba23d73F094320",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_validatorsCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotSupported",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minAmountForStake",
          "type": "uint256"
        }
      ],
      "name": "LogMinAmountForStake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "id",
          "type": "address"
        }
      ],
      "name": "LogValidatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "id",
          "type": "address"
        }
      ],
      "name": "LogValidatorRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "id",
          "type": "address"
        }
      ],
      "name": "LogValidatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NUMBER_OF_VALIDATORS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ONE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOTAL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ix",
          "type": "uint256"
        }
      ],
      "name": "addresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_validator",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddresses",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalances",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "allBalances",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberOfValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "receiveApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "register",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "setMinAmountForStake",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unregister",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_id",
          "type": "address"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "address",
          "name": "id",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x2e103c7b9ea0130148ab23e1cc58176d1b47b6f0b14034b8c59b08bd35a5a3b5",
  "receipt": {
    "to": null,
    "from": "0x66f13FDceed822E74b6a1e08e082Fa699fF36454",
    "contractAddress": "0xBb57A6e58E999b1020723e86F9ba23d73F094320",
    "transactionIndex": 1,
    "gasUsed": "1120930",
    "logsBloom": "0x
    "blockHash": "0xc3790474f6fda47749e1400242a34a0c828df8ed8607f6ab47a2c20b189263e0",
    "transactionHash": "0x2e103c7b9ea0130148ab23e1cc58176d1b47b6f0b14034b8c59b08bd35a5a3b5",
    "logs": [],
    "blockNumber": 21811546,
    "cumulativeGasUsed": "1141930",
    "status": 1,
    "byzantium": true
  },
  "args": [
    2
  ],
  "numDeployments": 3,
  "solcInputHash": "fddd9696c3883594e53d8bdef5d80642",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_validatorsCount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotSupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minAmountForStake\",\"type\":\"uint256\"}],\"name\":\"LogMinAmountForStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"}],\"name\":\"LogValidatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"}],\"name\":\"LogValidatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"}],\"name\":\"LogValidatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NUMBER_OF_VALIDATORS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ix\",\"type\":\"uint256\"}],\"name\":\"addresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"allBalances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfValidators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiveApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setMinAmountForStake\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unregister\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_id\",\"type\":\"address\"}],\"name\":\"validators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addresses(uint256)\":{\"details\":\"gets validator address for provided index\",\"params\":{\"_ix\":\"index in array of list of all validators wallets\"}},\"balanceOf(address)\":{\"details\":\"to follow ERC20 interface\"},\"exit()\":{\"details\":\"unstake and withdraw all tokens\"},\"getName()\":{\"details\":\"to follow Registrable interface\"},\"getNumberOfValidators()\":{\"returns\":{\"_0\":\"total number of registered validators (with and without balance)\"}},\"register()\":{\"details\":\"to follow Registrable interface\"},\"totalSupply()\":{\"details\":\"to follow ERC20 interface\"},\"unregister()\":{\"details\":\"to follow Registrable interface\"},\"validators(address)\":{\"params\":{\"_id\":\"address of validator\"},\"returns\":{\"id\":\"address of validator\",\"location\":\"URL of validator\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stakingBankStatic/StakingBankStaticDev.sol\":\"StakingBankStaticDev\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/interfaces/IStakingBank.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IStakingBank is IERC20 {\\n    /// @param id address of validator wallet\\n    /// @param location URL of the validator API\\n    struct Validator {\\n        address id;\\n        string location;\\n    }\\n\\n    event LogValidatorRegistered(address indexed id);\\n    event LogValidatorUpdated(address indexed id);\\n    event LogValidatorRemoved(address indexed id);\\n    event LogMinAmountForStake(uint256 minAmountForStake);\\n\\n    /// @dev setter for `minAmountForStake`\\n    function setMinAmountForStake(uint256 _minAmountForStake) external;\\n\\n    /// @dev allows to stake `token` by validators\\n    /// Validator needs to approve StakingBank beforehand\\n    /// @param _value amount of tokens to stake\\n    function stake(uint256 _value) external;\\n\\n    /// @dev notification about approval from `_from` address on UMB token\\n    /// Staking bank will stake max approved amount from `_from` address\\n    /// @param _from address which approved token spend for IStakingBank\\n    function receiveApproval(address _from) external returns (bool success);\\n\\n    /// @dev withdraws stake tokens\\n    /// it throws, when balance will be less than required minimum for stake\\n    /// to withdraw all use `exit`\\n    function withdraw(uint256 _value) external returns (bool success);\\n\\n    /// @dev unstake and withdraw all tokens\\n    function exit() external returns (bool success);\\n\\n    /// @dev creates (register) new validator\\n    /// @param _id validator address\\n    /// @param _location location URL of the validator API\\n    function create(address _id, string calldata _location) external;\\n\\n    /// @dev removes validator\\n    /// @param _id validator wallet\\n    function remove(address _id) external;\\n\\n    /// @dev updates validator location\\n    /// @param _id validator wallet\\n    /// @param _location new validator URL\\n    function update(address _id, string calldata _location) external;\\n\\n    /// @return total number of registered validators (with and without balance)\\n    function getNumberOfValidators() external view returns (uint256);\\n\\n    /// @dev gets validator address for provided index\\n    /// @param _ix index in array of list of all validators wallets\\n    function addresses(uint256 _ix) external view returns (address);\\n\\n    /// @param _id address of validator\\n    /// @return id address of validator\\n    /// @return location URL of validator\\n    function validators(address _id) external view returns (address id, string memory location);\\n}\\n\",\"keccak256\":\"0x2c518aeab8b0b3a364fafaec559d3ff0dc6a119f8d203fa31ef7ad667ca0f7b9\",\"license\":\"MIT\"},\"contracts/interfaces/StakingBankStaticNotSupported.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"./IStakingBank.sol\\\";\\n\\nabstract contract StakingBankStaticNotSupported is IStakingBank {\\n    error NotSupported();\\n\\n    function create(address, string calldata) external pure {\\n        revert NotSupported();\\n    }\\n\\n    function update(address, string calldata) external pure {\\n        revert NotSupported();\\n    }\\n\\n    function remove(address) external pure {\\n        revert NotSupported();\\n    }\\n\\n    function transfer(address, uint256) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function transferFrom(address, address, uint256) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function receiveApproval(address) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function allowance(address, address) external pure returns (uint256) {\\n        revert NotSupported();\\n    }\\n\\n    function approve(address, uint256) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function stake(uint256) external pure {\\n        revert NotSupported();\\n    }\\n\\n    function withdraw(uint256) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function exit() external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function setMinAmountForStake(uint256) external pure {\\n        revert NotSupported();\\n    }\\n}\\n\",\"keccak256\":\"0xa899ad9000220b04bc3f63f762a9a6a76dcc09449427e7774a53f4ceda9c1cf8\",\"license\":\"MIT\"},\"contracts/stakingBankStatic/StakingBankStatic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"../interfaces/StakingBankStaticNotSupported.sol\\\";\\n\\n/// @dev Because we are using PoA in UMB oracle, staked balance does not matter. What's matter is if signer is\\n/// validator or not. In this case  we can optimise `StakingBank` and make it static for better gas performance.\\nabstract contract StakingBankStatic is StakingBankStaticNotSupported {\\n    uint256 public constant ONE = 1e18;\\n\\n    uint256 public immutable NUMBER_OF_VALIDATORS; // solhint-disable-line var-name-mixedcase\\n    uint256 public immutable TOTAL_SUPPLY; // solhint-disable-line var-name-mixedcase\\n\\n    constructor(uint256 _validatorsCount) {\\n        NUMBER_OF_VALIDATORS = _validatorsCount;\\n        TOTAL_SUPPLY = _validatorsCount * ONE;\\n    }\\n\\n    function balances(address _validator) external view returns (uint256) {\\n        return _isValidator(_validator) ? ONE : 0;\\n    }\\n\\n    function getNumberOfValidators() external view returns (uint256) {\\n        return NUMBER_OF_VALIDATORS;\\n    }\\n\\n    function getAddresses() external view returns (address[] memory) {\\n        return _addresses();\\n    }\\n\\n    function getBalances() external view returns (uint256[] memory allBalances) {\\n        allBalances = new uint256[](NUMBER_OF_VALIDATORS);\\n\\n        for (uint256 i; i < NUMBER_OF_VALIDATORS;) {\\n            allBalances[i] = ONE;\\n\\n            unchecked {\\n                // we will not have enough data to overflow\\n                i++;\\n            }\\n        }\\n    }\\n\\n    function addresses(uint256 _ix) external view returns (address) {\\n        return _addresses()[_ix];\\n    }\\n\\n    function validators(address _id) external view virtual returns (address id, string memory location);\\n\\n    /// @dev to follow ERC20 interface\\n    function balanceOf(address _account) external view returns (uint256) {\\n        return _isValidator(_account) ? ONE : 0;\\n    }\\n\\n    /// @dev to follow ERC20 interface\\n    function totalSupply() external view returns (uint256) {\\n        return TOTAL_SUPPLY;\\n    }\\n\\n    /// @dev to follow Registrable interface\\n    function getName() external pure returns (bytes32) {\\n        return \\\"StakingBank\\\";\\n    }\\n\\n    /// @dev to follow Registrable interface\\n    function register() external pure {\\n        // there are no requirements atm\\n    }\\n\\n    /// @dev to follow Registrable interface\\n    function unregister() external pure {\\n        // there are no requirements atm\\n    }\\n\\n    function _addresses() internal view virtual returns (address[] memory);\\n\\n    function _isValidator(address _validator) internal view virtual returns (bool);\\n}\\n\",\"keccak256\":\"0xe677c7e8ebce12e2701b8c57b7b5481fefd8db847a42200cc17d7ad5f20bf811\",\"license\":\"MIT\"},\"contracts/stakingBankStatic/StakingBankStaticDev.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"./StakingBankStatic.sol\\\";\\n\\n\\ncontract StakingBankStaticDev is StakingBankStatic {\\n    address public constant VALIDATOR_0 = address(0xDc3eBc37DA53A644D67E5E3b5BA4EEF88D969d5C);\\n    address public constant VALIDATOR_1 = address(0x998cb7821e605cC16b6174e7C50E19ADb2Dd2fB0);\\n\\n    constructor(uint256 _validatorsCount) StakingBankStatic(_validatorsCount) {}\\n\\n    function validators(address _id) external pure override returns (address id, string memory location) {\\n        if (_id == VALIDATOR_0) return (_id, \\\"https://validator.dev.umb.network\\\");\\n        if (_id == VALIDATOR_1) return (_id, \\\"https://validator2.dev.umb.network\\\");\\n\\n        return (address(0), \\\"\\\");\\n    }\\n\\n    function _addresses() internal view override returns (address[] memory) {\\n        address[] memory list = new address[](NUMBER_OF_VALIDATORS);\\n\\n        list[0] = VALIDATOR_0;\\n        list[1] = VALIDATOR_1;\\n\\n        return list;\\n    }\\n\\n    function _isValidator(address _validator) internal view override returns (bool) {\\n        return (_validator == VALIDATOR_0 || _validator == VALIDATOR_1);\\n    }\\n}\\n\",\"keccak256\":\"0x7b4477fcc921b81d590f1e1a59125a43b0870331c4f219b86256cfc6604a5e0f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101535760003560e01c8062113e0814610158578063095ea7b3146101765780630db18e37146101a657806317d7de7c146101d657806318160ddd146101f45780631aa3a0081461021257806323b872dd1461021c57806327e235e31461024c57806329092d0e1461027c5780632e1a7d4d14610298578063411ff497146102c857806352b41e35146102e657806370a0823114610302578063838e7c3a14610332578063902d55a51461034e5780639031d9131461036c5780639f0e94841461038a578063a15ab08d146103a8578063a39fac12146103c4578063a694fc3a146103e2578063a9059cbb146103fe578063c2ee3a081461042e578063db7317771461044c578063dd62ed3e1461046a578063e79a198f1461049a578063e9fad8ee146104a4578063edf26d9b146104c2578063fa52c7d8146104f2575b600080fd5b610160610523565b60405161016d9190610d70565b60405180910390f35b610190600480360381019061018b9190610e26565b6105f4565b60405161019d9190610e81565b60405180910390f35b6101c060048036038101906101bb9190610e9c565b610628565b6040516101cd9190610e81565b60405180910390f35b6101de61065c565b6040516101eb9190610ee2565b60405180910390f35b6101fc610684565b6040516102099190610f0c565b60405180910390f35b61021a6106ac565b005b61023660048036038101906102319190610f27565b6106ae565b6040516102439190610e81565b60405180910390f35b61026660048036038101906102619190610e9c565b6106e2565b6040516102739190610f0c565b60405180910390f35b61029660048036038101906102919190610e9c565b610709565b005b6102b260048036038101906102ad9190610f7a565b61073b565b6040516102bf9190610e81565b60405180910390f35b6102d061076f565b6040516102dd9190610fb6565b60405180910390f35b61030060048036038101906102fb9190610f7a565b610787565b005b61031c60048036038101906103179190610e9c565b6107b9565b6040516103299190610f0c565b60405180910390f35b61034c60048036038101906103479190611036565b6107e0565b005b610356610812565b6040516103639190610f0c565b60405180910390f35b610374610836565b6040516103819190610f0c565b60405180910390f35b61039261085e565b60405161039f9190610fb6565b60405180910390f35b6103c260048036038101906103bd9190611036565b610876565b005b6103cc6108a8565b6040516103d99190611154565b60405180910390f35b6103fc60048036038101906103f79190610f7a565b6108b7565b005b61041860048036038101906104139190610e26565b6108e9565b6040516104259190610e81565b60405180910390f35b61043661091d565b6040516104439190610f0c565b60405180910390f35b610454610929565b6040516104619190610f0c565b60405180910390f35b610484600480360381019061047f9190611176565b61094d565b6040516104919190610f0c565b60405180910390f35b6104a2610981565b005b6104ac610983565b6040516104b99190610e81565b60405180910390f35b6104dc60048036038101906104d79190610f7a565b6109b7565b6040516104e99190610fb6565b60405180910390f35b61050c60048036038101906105079190610e9c565b6109e2565b60405161051a92919061124f565b60405180910390f35b60607f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff81111561055f5761055e61127f565b5b60405190808252806020026020018201604052801561058d5781602001602082028036833780820191505090505b50905060005b7f00000000000000000000000000000000000000000000000000000000000000008110156105f057670de0b6b3a76400008282815181106105d7576105d66112ae565b5b6020026020010181815250508080600101915050610593565b5090565b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f5374616b696e6742616e6b000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b565b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006106ed82610ad6565b6106f8576000610702565b670de0b6b3a76400005b9050919050565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73998cb7821e605cc16b6174e7c50e19adb2dd2fb081565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006107c482610ad6565b6107cf5760006107d9565b670de0b6b3a76400005b9050919050565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b73dc3ebc37da53a644d67e5e3b5ba4eef88d969d5c81565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60606108b2610b6c565b905090565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b670de0b6b3a764000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109c1610b6c565b82815181106109d3576109d26112ae565b5b60200260200101519050919050565b6000606073dc3ebc37da53a644d67e5e3b5ba4eef88d969d5c73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a5057826040518060600160405280602181526020016112de6021913991509150610ad1565b73998cb7821e605cc16b6174e7c50e19adb2dd2fb073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610aba57826040518060600160405280602281526020016112ff6022913991509150610ad1565b600060405180602001604052806000815250915091505b915091565b600073dc3ebc37da53a644d67e5e3b5ba4eef88d969d5c73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480610b65575073998cb7821e605cc16b6174e7c50e19adb2dd2fb073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b9050919050565b606060007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff811115610baa57610ba961127f565b5b604051908082528060200260200182016040528015610bd85781602001602082028036833780820191505090505b50905073dc3ebc37da53a644d67e5e3b5ba4eef88d969d5c81600081518110610c0457610c036112ae565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073998cb7821e605cc16b6174e7c50e19adb2dd2fb081600181518110610c6757610c666112ae565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508091505090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b610ce781610cd4565b82525050565b6000610cf98383610cde565b60208301905092915050565b6000602082019050919050565b6000610d1d82610ca8565b610d278185610cb3565b9350610d3283610cc4565b8060005b83811015610d63578151610d4a8882610ced565b9750610d5583610d05565b925050600181019050610d36565b5085935050505092915050565b60006020820190508181036000830152610d8a8184610d12565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dc782610d9c565b9050919050565b610dd781610dbc565b8114610de257600080fd5b50565b600081359050610df481610dce565b92915050565b610e0381610cd4565b8114610e0e57600080fd5b50565b600081359050610e2081610dfa565b92915050565b60008060408385031215610e3d57610e3c610d92565b5b6000610e4b85828601610de5565b9250506020610e5c85828601610e11565b9150509250929050565b60008115159050919050565b610e7b81610e66565b82525050565b6000602082019050610e966000830184610e72565b92915050565b600060208284031215610eb257610eb1610d92565b5b6000610ec084828501610de5565b91505092915050565b6000819050919050565b610edc81610ec9565b82525050565b6000602082019050610ef76000830184610ed3565b92915050565b610f0681610cd4565b82525050565b6000602082019050610f216000830184610efd565b92915050565b600080600060608486031215610f4057610f3f610d92565b5b6000610f4e86828701610de5565b9350506020610f5f86828701610de5565b9250506040610f7086828701610e11565b9150509250925092565b600060208284031215610f9057610f8f610d92565b5b6000610f9e84828501610e11565b91505092915050565b610fb081610dbc565b82525050565b6000602082019050610fcb6000830184610fa7565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610ff657610ff5610fd1565b5b8235905067ffffffffffffffff81111561101357611012610fd6565b5b60208301915083600182028301111561102f5761102e610fdb565b5b9250929050565b60008060006040848603121561104f5761104e610d92565b5b600061105d86828701610de5565b935050602084013567ffffffffffffffff81111561107e5761107d610d97565b5b61108a86828701610fe0565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6110cb81610dbc565b82525050565b60006110dd83836110c2565b60208301905092915050565b6000602082019050919050565b600061110182611096565b61110b81856110a1565b9350611116836110b2565b8060005b8381101561114757815161112e88826110d1565b9750611139836110e9565b92505060018101905061111a565b5085935050505092915050565b6000602082019050818103600083015261116e81846110f6565b905092915050565b6000806040838503121561118d5761118c610d92565b5b600061119b85828601610de5565b92505060206111ac85828601610de5565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111f05780820151818401526020810190506111d5565b838111156111ff576000848401525b50505050565b6000601f19601f8301169050919050565b6000611221826111b6565b61122b81856111c1565b935061123b8185602086016111d2565b61124481611205565b840191505092915050565b60006040820190506112646000830185610fa7565b81810360208301526112768184611216565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe68747470733a2f2f76616c696461746f722e6465762e756d622e6e6574776f726b68747470733a2f2f76616c696461746f72322e6465762e756d622e6e6574776f726ba264697066735822122011378827bc5dbe92d05625fc72cd1b6002949e8f6ad627e26d5f187db0d7a9b564736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addresses(uint256)": {
        "details": "gets validator address for provided index",
        "params": {
          "_ix": "index in array of list of all validators wallets"
        }
      },
      "balanceOf(address)": {
        "details": "to follow ERC20 interface"
      },
      "exit()": {
        "details": "unstake and withdraw all tokens"
      },
      "getName()": {
        "details": "to follow Registrable interface"
      },
      "getNumberOfValidators()": {
        "returns": {
          "_0": "total number of registered validators (with and without balance)"
        }
      },
      "register()": {
        "details": "to follow Registrable interface"
      },
      "totalSupply()": {
        "details": "to follow ERC20 interface"
      },
      "unregister()": {
        "details": "to follow Registrable interface"
      },
      "validators(address)": {
        "params": {
          "_id": "address of validator"
        },
        "returns": {
          "id": "address of validator",
          "location": "URL of validator"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}