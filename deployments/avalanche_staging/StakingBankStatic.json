{
  "address": "0x1EEC016B6b349D4e74b5A210A4c976F6aC18c642",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_validatorsCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotSupported",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minAmountForStake",
          "type": "uint256"
        }
      ],
      "name": "LogMinAmountForStake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "id",
          "type": "address"
        }
      ],
      "name": "LogValidatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "id",
          "type": "address"
        }
      ],
      "name": "LogValidatorRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "id",
          "type": "address"
        }
      ],
      "name": "LogValidatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NUMBER_OF_VALIDATORS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOTAL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ix",
          "type": "uint256"
        }
      ],
      "name": "addresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_validator",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddresses",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalances",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "allBalances",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberOfValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "receiveApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "setMinAmountForStake",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unregister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_id",
          "type": "address"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "address",
          "name": "id",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x1215cfa4614d6719ce8a316b3bb2bea44f09b31d04248083574a61664d319a14",
  "receipt": {
    "to": null,
    "from": "0x66f13FDceed822E74b6a1e08e082Fa699fF36454",
    "contractAddress": "0x1EEC016B6b349D4e74b5A210A4c976F6aC18c642",
    "transactionIndex": 4,
    "gasUsed": "1130009",
    "logsBloom": "0x
    "blockHash": "0xc7dfcfb84bb73a6eb007997d979ccf50cc7674e702924609d06f09868d47ce00",
    "transactionHash": "0x1215cfa4614d6719ce8a316b3bb2bea44f09b31d04248083574a61664d319a14",
    "logs": [],
    "blockNumber": 21503146,
    "cumulativeGasUsed": "1397623",
    "status": 1,
    "byzantium": true
  },
  "args": [
    2
  ],
  "numDeployments": 1,
  "solcInputHash": "f29a68c37efeeaf5816affb2671033ec",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_validatorsCount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotSupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minAmountForStake\",\"type\":\"uint256\"}],\"name\":\"LogMinAmountForStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"}],\"name\":\"LogValidatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"}],\"name\":\"LogValidatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"}],\"name\":\"LogValidatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NUMBER_OF_VALIDATORS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ix\",\"type\":\"uint256\"}],\"name\":\"addresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"allBalances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfValidators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiveApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setMinAmountForStake\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unregister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_id\",\"type\":\"address\"}],\"name\":\"validators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addresses(uint256)\":{\"details\":\"gets validator address for provided index\",\"params\":{\"_ix\":\"index in array of list of all validators wallets\"}},\"exit()\":{\"details\":\"unstake and withdraw all tokens\"},\"getName()\":{\"details\":\"to follow Registrable interface\"},\"getNumberOfValidators()\":{\"returns\":{\"_0\":\"total number of registered validators (with and without balance)\"}},\"register()\":{\"details\":\"to follow Registrable interface\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"unregister()\":{\"details\":\"to follow Registrable interface\"},\"validators(address)\":{\"params\":{\"_id\":\"address of validator\"},\"returns\":{\"id\":\"address of validator\",\"location\":\"URL of validator\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stakingBankStatic/StakingBankStaticDev.sol\":\"StakingBankStaticDev\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/interfaces/IStakingBank.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IStakingBank is IERC20 {\\n    /// @param id address of validator wallet\\n    /// @param location URL of the validator API\\n    struct Validator {\\n        address id;\\n        string location;\\n    }\\n\\n    event LogValidatorRegistered(address indexed id);\\n    event LogValidatorUpdated(address indexed id);\\n    event LogValidatorRemoved(address indexed id);\\n    event LogMinAmountForStake(uint256 minAmountForStake);\\n\\n    /// @dev setter for `minAmountForStake`\\n    function setMinAmountForStake(uint256 _minAmountForStake) external;\\n\\n    /// @dev allows to stake `token` by validators\\n    /// Validator needs to approve StakingBank beforehand\\n    /// @param _value amount of tokens to stake\\n    function stake(uint256 _value) external;\\n\\n    /// @dev notification about approval from `_from` address on UMB token\\n    /// Staking bank will stake max approved amount from `_from` address\\n    /// @param _from address which approved token spend for IStakingBank\\n    function receiveApproval(address _from) external returns (bool success);\\n\\n    /// @dev withdraws stake tokens\\n    /// it throws, when balance will be less than required minimum for stake\\n    /// to withdraw all use `exit`\\n    function withdraw(uint256 _value) external returns (bool success);\\n\\n    /// @dev unstake and withdraw all tokens\\n    function exit() external returns (bool success);\\n\\n    /// @dev creates (register) new validator\\n    /// @param _id validator address\\n    /// @param _location location URL of the validator API\\n    function create(address _id, string calldata _location) external;\\n\\n    /// @dev removes validator\\n    /// @param _id validator wallet\\n    function remove(address _id) external;\\n\\n    /// @dev updates validator location\\n    /// @param _id validator wallet\\n    /// @param _location new validator URL\\n    function update(address _id, string calldata _location) external;\\n\\n    /// @return total number of registered validators (with and without balance)\\n    function getNumberOfValidators() external view returns (uint256);\\n\\n    /// @dev gets validator address for provided index\\n    /// @param _ix index in array of list of all validators wallets\\n    function addresses(uint256 _ix) external view returns (address);\\n\\n    /// @param _id address of validator\\n    /// @return id address of validator\\n    /// @return location URL of validator\\n    function validators(address _id) external view returns (address id, string memory location);\\n}\\n\",\"keccak256\":\"0x2c518aeab8b0b3a364fafaec559d3ff0dc6a119f8d203fa31ef7ad667ca0f7b9\",\"license\":\"MIT\"},\"contracts/interfaces/StakingBankStaticNotSupported.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"./IStakingBank.sol\\\";\\n\\nabstract contract StakingBankStaticNotSupported is IStakingBank {\\n    error NotSupported();\\n\\n    function create(address, string calldata) external pure {\\n        revert NotSupported();\\n    }\\n\\n    function update(address, string calldata) external pure {\\n        revert NotSupported();\\n    }\\n\\n    function remove(address) external pure {\\n        revert NotSupported();\\n    }\\n\\n    function transfer(address, uint256) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function transferFrom(address, address, uint256) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function receiveApproval(address) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function allowance(address, address) external pure returns (uint256) {\\n        revert NotSupported();\\n    }\\n\\n    function approve(address, uint256) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function stake(uint256) external pure {\\n        revert NotSupported();\\n    }\\n\\n    function withdraw(uint256) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function exit() external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function setMinAmountForStake(uint256) external pure {\\n        revert NotSupported();\\n    }\\n}\\n\",\"keccak256\":\"0xa899ad9000220b04bc3f63f762a9a6a76dcc09449427e7774a53f4ceda9c1cf8\",\"license\":\"MIT\"},\"contracts/stakingBankStatic/StakingBankStatic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"../interfaces/StakingBankStaticNotSupported.sol\\\";\\n\\nabstract contract StakingBankStatic is StakingBankStaticNotSupported {\\n    uint256 public immutable NUMBER_OF_VALIDATORS;\\n    uint256 public immutable TOTAL_SUPPLY;\\n\\n    constructor(uint256 _validatorsCount) {\\n        NUMBER_OF_VALIDATORS = _validatorsCount;\\n        TOTAL_SUPPLY = _validatorsCount * 1e18;\\n    }\\n\\n    /// @dev to follow Registrable interface\\n    function register() external {\\n        // there are no requirements atm\\n    }\\n\\n    /// @dev to follow Registrable interface\\n    function unregister() external {\\n        // there are no requirements atm\\n    }\\n\\n    function balances(address _validator) external view returns (uint256) {\\n        return _isValidator(_validator) ? 1e18 : 0;\\n    }\\n\\n    function getNumberOfValidators() external view returns (uint256) {\\n        return NUMBER_OF_VALIDATORS;\\n    }\\n\\n    function getAddresses() external view returns (address[] memory) {\\n        return _addresses();\\n    }\\n\\n    function getBalances() external view returns (uint256[] memory allBalances) {\\n        allBalances = new uint256[](NUMBER_OF_VALIDATORS);\\n\\n        for (uint256 i; i < NUMBER_OF_VALIDATORS;) {\\n            allBalances[i] = 1;\\n\\n            unchecked {\\n                // we will not have enough data to overflow\\n                i++;\\n            }\\n        }\\n    }\\n\\n    function addresses(uint256 _ix) external view returns (address) {\\n        return _addresses()[_ix];\\n    }\\n\\n    function validators(address _id) external view virtual returns (address id, string memory location);\\n\\n    function balanceOf(address _account) external view returns (uint256) {\\n        return _isValidator(_account) ? 1 : 0;\\n    }\\n\\n    function totalSupply() external view returns (uint256) {\\n        return TOTAL_SUPPLY;\\n    }\\n\\n    /// @dev to follow Registrable interface\\n    function getName() external pure returns (bytes32) {\\n        return \\\"StakingBank\\\";\\n    }\\n\\n    function _addresses() internal view virtual returns (address[] memory);\\n\\n    function _isValidator(address _validator) internal view virtual returns (bool);\\n}\\n\",\"keccak256\":\"0x2124f10eae8d841182010a07954364cb3d601d51eacc93ed404ee52d878c1a4e\",\"license\":\"MIT\"},\"contracts/stakingBankStatic/StakingBankStaticDev.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"./StakingBankStatic.sol\\\";\\n\\n\\ncontract StakingBankStaticDev is StakingBankStatic {\\n    address public constant VALIDATOR_0 = address(0xDc3eBc37DA53A644D67E5E3b5BA4EEF88D969d5C);\\n    address public constant VALIDATOR_1 = address(0x998cb7821e605cC16b6174e7C50E19ADb2Dd2fB0);\\n\\n    constructor(uint256 _validatorsCount) StakingBankStatic(_validatorsCount) {}\\n\\n    function validators(address _id) external view override returns (address id, string memory location) {\\n        if (_id == VALIDATOR_0) return (_id, \\\"https://validator.dev.umb.network\\\");\\n        if (_id == VALIDATOR_1) return (_id, \\\"https://validator2.dev.umb.network\\\");\\n\\n        return (address(0), \\\"\\\");\\n    }\\n\\n    function _addresses() internal view override returns (address[] memory) {\\n        address[] memory list = new address[](NUMBER_OF_VALIDATORS);\\n\\n        list[0] = VALIDATOR_0;\\n        list[1] = VALIDATOR_1;\\n\\n        return list;\\n    }\\n\\n    function _isValidator(address _validator) internal view override returns (bool) {\\n        return (_validator == VALIDATOR_0 || _validator == VALIDATOR_1);\\n    }\\n}\\n\",\"keccak256\":\"0xc19b8c97887bc055acd29afc969cc20d3cc38f6c7d8a9ea57d369556b700e3bf\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b5060405162001530380380620015308339818101604052810190620000379190620000a5565b808060808181525050670de0b6b3a76400008162000056919062000106565b60a08181525050505062000167565b600080fd5b6000819050919050565b6200007f816200006a565b81146200008b57600080fd5b50565b6000815190506200009f8162000074565b92915050565b600060208284031215620000be57620000bd62000065565b5b6000620000ce848285016200008e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000113826200006a565b915062000120836200006a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200015c576200015b620000d7565b5b828202905092915050565b60805160a051611380620001b0600039600081816106b8015261084a01526000818161055e015281816105cc01528181610870015281816109550152610b9c01526113806000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c8063838e7c3a116100f9578063a9059cbb11610097578063e79a198f11610071578063e79a198f146104d1578063e9fad8ee146104db578063edf26d9b146104f9578063fa52c7d814610529576101a8565b8063a9059cbb14610453578063db73177714610483578063dd62ed3e146104a1576101a8565b80639f0e9484116100d35780639f0e9484146103df578063a15ab08d146103fd578063a39fac1214610419578063a694fc3a14610437576101a8565b8063838e7c3a14610387578063902d55a5146103a35780639031d913146103c1576101a8565b806323b872dd116101665780632e1a7d4d116101405780632e1a7d4d146102ed578063411ff4971461031d57806352b41e351461033b57806370a0823114610357576101a8565b806323b872dd1461027157806327e235e3146102a157806329092d0e146102d1576101a8565b8062113e08146101ad578063095ea7b3146101cb5780630db18e37146101fb57806317d7de7c1461022b57806318160ddd146102495780631aa3a00814610267575b600080fd5b6101b561055a565b6040516101c29190610d9a565b60405180910390f35b6101e560048036038101906101e09190610e50565b610624565b6040516101f29190610eab565b60405180910390f35b61021560048036038101906102109190610ec6565b610658565b6040516102229190610eab565b60405180910390f35b61023361068c565b6040516102409190610f0c565b60405180910390f35b6102516106b4565b60405161025e9190610f36565b60405180910390f35b61026f6106dc565b005b61028b60048036038101906102869190610f51565b6106de565b6040516102989190610eab565b60405180910390f35b6102bb60048036038101906102b69190610ec6565b610712565b6040516102c89190610f36565b60405180910390f35b6102eb60048036038101906102e69190610ec6565b610743565b005b61030760048036038101906103029190610fa4565b610775565b6040516103149190610eab565b60405180910390f35b6103256107a9565b6040516103329190610fe0565b60405180910390f35b61035560048036038101906103509190610fa4565b6107c1565b005b610371600480360381019061036c9190610ec6565b6107f3565b60405161037e9190610f36565b60405180910390f35b6103a1600480360381019061039c9190611060565b610816565b005b6103ab610848565b6040516103b89190610f36565b60405180910390f35b6103c961086c565b6040516103d69190610f36565b60405180910390f35b6103e7610894565b6040516103f49190610fe0565b60405180910390f35b61041760048036038101906104129190611060565b6108ac565b005b6104216108de565b60405161042e919061117e565b60405180910390f35b610451600480360381019061044c9190610fa4565b6108ed565b005b61046d60048036038101906104689190610e50565b61091f565b60405161047a9190610eab565b60405180910390f35b61048b610953565b6040516104989190610f36565b60405180910390f35b6104bb60048036038101906104b691906111a0565b610977565b6040516104c89190610f36565b60405180910390f35b6104d96109ab565b005b6104e36109ad565b6040516104f09190610eab565b60405180910390f35b610513600480360381019061050e9190610fa4565b6109e1565b6040516105209190610fe0565b60405180910390f35b610543600480360381019061053e9190610ec6565b610a0c565b604051610551929190611279565b60405180910390f35b60607f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff811115610596576105956112a9565b5b6040519080825280602002602001820160405280156105c45781602001602082028036833780820191505090505b50905060005b7f0000000000000000000000000000000000000000000000000000000000000000811015610620576001828281518110610607576106066112d8565b5b60200260200101818152505080806001019150506105ca565b5090565b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f5374616b696e6742616e6b000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b565b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061071d82610b00565b610728576000610732565b670de0b6b3a76400005b67ffffffffffffffff169050919050565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73998cb7821e605cc16b6174e7c50e19adb2dd2fb081565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006107fe82610b00565b61080957600061080c565b60015b60ff169050919050565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b73dc3ebc37da53a644d67e5e3b5ba4eef88d969d5c81565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60606108e8610b96565b905090565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109eb610b96565b82815181106109fd576109fc6112d8565b5b60200260200101519050919050565b6000606073dc3ebc37da53a644d67e5e3b5ba4eef88d969d5c73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a7a57826040518060600160405280602181526020016113086021913991509150610afb565b73998cb7821e605cc16b6174e7c50e19adb2dd2fb073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ae457826040518060600160405280602281526020016113296022913991509150610afb565b600060405180602001604052806000815250915091505b915091565b600073dc3ebc37da53a644d67e5e3b5ba4eef88d969d5c73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480610b8f575073998cb7821e605cc16b6174e7c50e19adb2dd2fb073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b9050919050565b606060007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff811115610bd457610bd36112a9565b5b604051908082528060200260200182016040528015610c025781602001602082028036833780820191505090505b50905073dc3ebc37da53a644d67e5e3b5ba4eef88d969d5c81600081518110610c2e57610c2d6112d8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073998cb7821e605cc16b6174e7c50e19adb2dd2fb081600181518110610c9157610c906112d8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508091505090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b610d1181610cfe565b82525050565b6000610d238383610d08565b60208301905092915050565b6000602082019050919050565b6000610d4782610cd2565b610d518185610cdd565b9350610d5c83610cee565b8060005b83811015610d8d578151610d748882610d17565b9750610d7f83610d2f565b925050600181019050610d60565b5085935050505092915050565b60006020820190508181036000830152610db48184610d3c565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610df182610dc6565b9050919050565b610e0181610de6565b8114610e0c57600080fd5b50565b600081359050610e1e81610df8565b92915050565b610e2d81610cfe565b8114610e3857600080fd5b50565b600081359050610e4a81610e24565b92915050565b60008060408385031215610e6757610e66610dbc565b5b6000610e7585828601610e0f565b9250506020610e8685828601610e3b565b9150509250929050565b60008115159050919050565b610ea581610e90565b82525050565b6000602082019050610ec06000830184610e9c565b92915050565b600060208284031215610edc57610edb610dbc565b5b6000610eea84828501610e0f565b91505092915050565b6000819050919050565b610f0681610ef3565b82525050565b6000602082019050610f216000830184610efd565b92915050565b610f3081610cfe565b82525050565b6000602082019050610f4b6000830184610f27565b92915050565b600080600060608486031215610f6a57610f69610dbc565b5b6000610f7886828701610e0f565b9350506020610f8986828701610e0f565b9250506040610f9a86828701610e3b565b9150509250925092565b600060208284031215610fba57610fb9610dbc565b5b6000610fc884828501610e3b565b91505092915050565b610fda81610de6565b82525050565b6000602082019050610ff56000830184610fd1565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126110205761101f610ffb565b5b8235905067ffffffffffffffff81111561103d5761103c611000565b5b60208301915083600182028301111561105957611058611005565b5b9250929050565b60008060006040848603121561107957611078610dbc565b5b600061108786828701610e0f565b935050602084013567ffffffffffffffff8111156110a8576110a7610dc1565b5b6110b48682870161100a565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6110f581610de6565b82525050565b600061110783836110ec565b60208301905092915050565b6000602082019050919050565b600061112b826110c0565b61113581856110cb565b9350611140836110dc565b8060005b8381101561117157815161115888826110fb565b975061116383611113565b925050600181019050611144565b5085935050505092915050565b600060208201905081810360008301526111988184611120565b905092915050565b600080604083850312156111b7576111b6610dbc565b5b60006111c585828601610e0f565b92505060206111d685828601610e0f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561121a5780820151818401526020810190506111ff565b83811115611229576000848401525b50505050565b6000601f19601f8301169050919050565b600061124b826111e0565b61125581856111eb565b93506112658185602086016111fc565b61126e8161122f565b840191505092915050565b600060408201905061128e6000830185610fd1565b81810360208301526112a08184611240565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe68747470733a2f2f76616c696461746f722e6465762e756d622e6e6574776f726b68747470733a2f2f76616c696461746f72322e6465762e756d622e6e6574776f726ba26469706673582212208f99e8b46ef39710d46a9bd3057d81b4744dc6f6bbec54447cf604e816a8f02564736f6c634300080d0033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addresses(uint256)": {
        "details": "gets validator address for provided index",
        "params": {
          "_ix": "index in array of list of all validators wallets"
        }
      },
      "exit()": {
        "details": "unstake and withdraw all tokens"
      },
      "getName()": {
        "details": "to follow Registrable interface"
      },
      "getNumberOfValidators()": {
        "returns": {
          "_0": "total number of registered validators (with and without balance)"
        }
      },
      "register()": {
        "details": "to follow Registrable interface"
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "unregister()": {
        "details": "to follow Registrable interface"
      },
      "validators(address)": {
        "params": {
          "_id": "address of validator"
        },
        "returns": {
          "id": "address of validator",
          "location": "URL of validator"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}