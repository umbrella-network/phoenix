{
  "address": "0x7Cc8AcBE6cc1C302Df3C64f7Fd0aC44fD413dFf7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_validatorsCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotSupported",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minAmountForStake",
          "type": "uint256"
        }
      ],
      "name": "LogMinAmountForStake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "id",
          "type": "address"
        }
      ],
      "name": "LogValidatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "id",
          "type": "address"
        }
      ],
      "name": "LogValidatorRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "id",
          "type": "address"
        }
      ],
      "name": "LogValidatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NUMBER_OF_VALIDATORS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ONE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOTAL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_10",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_11",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_12",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_13",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_14",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_15",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_16",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_17",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_4",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_5",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_6",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_7",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_8",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ix",
          "type": "uint256"
        }
      ],
      "name": "addresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_validator",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddresses",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalances",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "allBalances",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberOfValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "receiveApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "register",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "setMinAmountForStake",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unregister",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_id",
          "type": "address"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "address",
          "name": "id",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_validators",
          "type": "address[]"
        }
      ],
      "name": "verifyValidators",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x8c840a00b2979cefcfc0e8fcb6bce429fd42b22034f0479356598100c89ca23d",
  "receipt": {
    "to": null,
    "from": "0xA6e4fFa19B213AbeA258ae72e8e1a209B9E543e7",
    "contractAddress": "0x7Cc8AcBE6cc1C302Df3C64f7Fd0aC44fD413dFf7",
    "transactionIndex": 43,
    "gasUsed": "2492698",
    "logsBloom": "0x
    "blockHash": "0x8afe0c6a4f80125ee226b65fbca419e98ad8904e5701ec89a6ebb2a3ca170386",
    "transactionHash": "0x8c840a00b2979cefcfc0e8fcb6bce429fd42b22034f0479356598100c89ca23d",
    "logs": [
      {
        "transactionIndex": 43,
        "blockNumber": 43944030,
        "transactionHash": "0x8c840a00b2979cefcfc0e8fcb6bce429fd42b22034f0479356598100c89ca23d",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000a6e4ffa19b213abea258ae72e8e1a209b9e543e7",
          "0x000000000000000000000000794e44d1334a56fea7f4df12633b88820d0c5888"
        ],
        "data": "0x00000000000000000000000000000000000000000000000001b5798cb3e0eac4000000000000000000000000000000000000000000000001141bba926ebab1140000000000000000000000000000000000000000000001f86a47f603a07a86ed00000000000000000000000000000000000000000000000112664105bad9c6500000000000000000000000000000000000000000000001f86bfd6f90545b71b1",
        "logIndex": 196,
        "blockHash": "0x8afe0c6a4f80125ee226b65fbca419e98ad8904e5701ec89a6ebb2a3ca170386"
      }
    ],
    "blockNumber": 43944030,
    "cumulativeGasUsed": "10354743",
    "status": 1,
    "byzantium": true
  },
  "args": [
    18
  ],
  "numDeployments": 1,
  "solcInputHash": "aaa9f0acc2da33c439c6f4a338ed2eee",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_validatorsCount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotSupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minAmountForStake\",\"type\":\"uint256\"}],\"name\":\"LogMinAmountForStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"}],\"name\":\"LogValidatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"}],\"name\":\"LogValidatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"}],\"name\":\"LogValidatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NUMBER_OF_VALIDATORS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_10\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_11\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_12\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_13\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_14\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_15\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_16\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_17\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_4\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_5\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_6\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_7\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_8\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ix\",\"type\":\"uint256\"}],\"name\":\"addresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"allBalances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfValidators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiveApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setMinAmountForStake\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unregister\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_id\",\"type\":\"address\"}],\"name\":\"validators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_validators\",\"type\":\"address[]\"}],\"name\":\"verifyValidators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addresses(uint256)\":{\"details\":\"gets validator address for provided index\",\"params\":{\"_ix\":\"index in array of list of all validators wallets\"}},\"balanceOf(address)\":{\"details\":\"to follow ERC20 interface\"},\"exit()\":{\"details\":\"unstake and withdraw all tokens\"},\"getName()\":{\"details\":\"to follow Registrable interface\"},\"getNumberOfValidators()\":{\"returns\":{\"_0\":\"total number of registered validators (with and without balance)\"}},\"register()\":{\"details\":\"to follow Registrable interface\"},\"totalSupply()\":{\"details\":\"to follow ERC20 interface\"},\"unregister()\":{\"details\":\"to follow Registrable interface\"},\"validators(address)\":{\"params\":{\"_id\":\"address of validator\"},\"returns\":{\"id\":\"address of validator\",\"location\":\"URL of validator\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stakingBankStatic/StakingBankStaticProd.sol\":\"StakingBankStaticProd\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/interfaces/IStakingBank.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IStakingBank is IERC20 {\\n    /// @param id address of validator wallet\\n    /// @param location URL of the validator API\\n    struct Validator {\\n        address id;\\n        string location;\\n    }\\n\\n    event LogValidatorRegistered(address indexed id);\\n    event LogValidatorUpdated(address indexed id);\\n    event LogValidatorRemoved(address indexed id);\\n    event LogMinAmountForStake(uint256 minAmountForStake);\\n\\n    /// @dev setter for `minAmountForStake`\\n    function setMinAmountForStake(uint256 _minAmountForStake) external;\\n\\n    /// @dev allows to stake `token` by validators\\n    /// Validator needs to approve StakingBank beforehand\\n    /// @param _value amount of tokens to stake\\n    function stake(uint256 _value) external;\\n\\n    /// @dev notification about approval from `_from` address on UMB token\\n    /// Staking bank will stake max approved amount from `_from` address\\n    /// @param _from address which approved token spend for IStakingBank\\n    function receiveApproval(address _from) external returns (bool success);\\n\\n    /// @dev withdraws stake tokens\\n    /// it throws, when balance will be less than required minimum for stake\\n    /// to withdraw all use `exit`\\n    function withdraw(uint256 _value) external returns (bool success);\\n\\n    /// @dev unstake and withdraw all tokens\\n    function exit() external returns (bool success);\\n\\n    /// @dev creates (register) new validator\\n    /// @param _id validator address\\n    /// @param _location location URL of the validator API\\n    function create(address _id, string calldata _location) external;\\n\\n    /// @dev removes validator\\n    /// @param _id validator wallet\\n    function remove(address _id) external;\\n\\n    /// @dev updates validator location\\n    /// @param _id validator wallet\\n    /// @param _location new validator URL\\n    function update(address _id, string calldata _location) external;\\n\\n    /// @return total number of registered validators (with and without balance)\\n    function getNumberOfValidators() external view returns (uint256);\\n\\n    /// @dev gets validator address for provided index\\n    /// @param _ix index in array of list of all validators wallets\\n    function addresses(uint256 _ix) external view returns (address);\\n\\n    /// @param _id address of validator\\n    /// @return id address of validator\\n    /// @return location URL of validator\\n    function validators(address _id) external view returns (address id, string memory location);\\n}\\n\",\"keccak256\":\"0x2c518aeab8b0b3a364fafaec559d3ff0dc6a119f8d203fa31ef7ad667ca0f7b9\",\"license\":\"MIT\"},\"contracts/interfaces/StakingBankStaticNotSupported.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"./IStakingBank.sol\\\";\\n\\nabstract contract StakingBankStaticNotSupported is IStakingBank {\\n    error NotSupported();\\n\\n    function create(address, string calldata) external pure {\\n        revert NotSupported();\\n    }\\n\\n    function update(address, string calldata) external pure {\\n        revert NotSupported();\\n    }\\n\\n    function remove(address) external pure {\\n        revert NotSupported();\\n    }\\n\\n    function transfer(address, uint256) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function transferFrom(address, address, uint256) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function receiveApproval(address) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function allowance(address, address) external pure returns (uint256) {\\n        revert NotSupported();\\n    }\\n\\n    function approve(address, uint256) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function stake(uint256) external pure {\\n        revert NotSupported();\\n    }\\n\\n    function withdraw(uint256) external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function exit() external pure returns (bool) {\\n        revert NotSupported();\\n    }\\n\\n    function setMinAmountForStake(uint256) external pure {\\n        revert NotSupported();\\n    }\\n}\\n\",\"keccak256\":\"0xa899ad9000220b04bc3f63f762a9a6a76dcc09449427e7774a53f4ceda9c1cf8\",\"license\":\"MIT\"},\"contracts/stakingBankStatic/StakingBankStatic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"../interfaces/StakingBankStaticNotSupported.sol\\\";\\n\\n/// @dev Because we are using PoA in UMB oracle, staked balance does not matter. What's matter is, if signer is\\n/// validator or not. In this case  we can optimise `StakingBank` and make it static for better gas performance.\\nabstract contract StakingBankStatic is StakingBankStaticNotSupported {\\n    uint256 public constant ONE = 1e18;\\n\\n    uint256 public immutable NUMBER_OF_VALIDATORS; // solhint-disable-line var-name-mixedcase\\n    uint256 public immutable TOTAL_SUPPLY; // solhint-disable-line var-name-mixedcase\\n\\n    constructor(uint256 _validatorsCount) {\\n        NUMBER_OF_VALIDATORS = _validatorsCount;\\n        TOTAL_SUPPLY = _validatorsCount * ONE;\\n    }\\n\\n    function balances(address _validator) external view returns (uint256) {\\n        return _isValidator(_validator) ? ONE : 0;\\n    }\\n\\n    function verifyValidators(address[] calldata _validators) external view returns (bool) {\\n        for (uint256 i; i < _validators.length;) {\\n            if (!_isValidator(_validators[i])) return false;\\n            unchecked { i++; }\\n        }\\n\\n        return true;\\n    }\\n\\n    function getNumberOfValidators() external view returns (uint256) {\\n        return NUMBER_OF_VALIDATORS;\\n    }\\n\\n    function getAddresses() external view returns (address[] memory) {\\n        return _addresses();\\n    }\\n\\n    function getBalances() external view returns (uint256[] memory allBalances) {\\n        allBalances = new uint256[](NUMBER_OF_VALIDATORS);\\n\\n        for (uint256 i; i < NUMBER_OF_VALIDATORS;) {\\n            allBalances[i] = ONE;\\n\\n            unchecked {\\n                // we will not have enough data to overflow\\n                i++;\\n            }\\n        }\\n    }\\n\\n    function addresses(uint256 _ix) external view returns (address) {\\n        return _addresses()[_ix];\\n    }\\n\\n    function validators(address _id) external view virtual returns (address id, string memory location);\\n\\n    /// @dev to follow ERC20 interface\\n    function balanceOf(address _account) external view returns (uint256) {\\n        return _isValidator(_account) ? ONE : 0;\\n    }\\n\\n    /// @dev to follow ERC20 interface\\n    function totalSupply() external view returns (uint256) {\\n        return TOTAL_SUPPLY;\\n    }\\n\\n    /// @dev to follow Registrable interface\\n    function getName() external pure returns (bytes32) {\\n        return \\\"StakingBank\\\";\\n    }\\n\\n    /// @dev to follow Registrable interface\\n    function register() external pure {\\n        // there are no requirements atm\\n    }\\n\\n    /// @dev to follow Registrable interface\\n    function unregister() external pure {\\n        // there are no requirements atm\\n    }\\n\\n    function _addresses() internal view virtual returns (address[] memory);\\n\\n    function _isValidator(address _validator) internal view virtual returns (bool);\\n}\\n\",\"keccak256\":\"0x95992d40d22ffa29f533ef2f9d121d43a40c64dc10c5252cda1984e093261667\",\"license\":\"MIT\"},\"contracts/stakingBankStatic/StakingBankStaticProd.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"./StakingBankStatic.sol\\\";\\n\\ncontract StakingBankStaticProd is StakingBankStatic {\\n    address public constant VALIDATOR_0 = address(0x977Ba523420110e230643B772Fe9cF955e11dA7B);\\n    address public constant VALIDATOR_1 = address(0xe2422b23e52bc13ebA04d7FbB9F332Deb43360fB);\\n\\n    // external order is based on validators submits on AVAX for Apr 2023\\n    address public constant VALIDATOR_2 = address(0x57F404aD75e371c1A539589C1eFCA12e0C6980AD);\\n    address public constant VALIDATOR_3 = address(0xD56C6A4f64E0bD70260472d1DB6Cf5825858CB0d);\\n    address public constant VALIDATOR_4 = address(0x220230Eda8f50067Dd9e4729345dabCCe0C61542);\\n    address public constant VALIDATOR_5 = address(0x93FdcAB283b0BcAc48157590af482E1CFd6af6aC);\\n    address public constant VALIDATOR_6 = address(0xCd733E06B06083d52fC5867E8E3432aA5c103A38);\\n    address public constant VALIDATOR_7 = address(0x42e210b110c6aa49CdfA7ceF1444Aa4719653111);\\n    address public constant VALIDATOR_8 = address(0x501731c6a69803a53Ec6c3e12f293c247cE1092B);\\n    address public constant VALIDATOR_9 = address(0x8bF9661F1b247522C75DD0FE84355aD2EfF27144);\\n    address public constant VALIDATOR_10 = address(0x281754Ab58391A478B7aA4E7f39991CfB41118c4);\\n    address public constant VALIDATOR_11 = address(0xB9C63a350A04d8BD245d18928a26EE036352dDd8);\\n    address public constant VALIDATOR_12 = address(0x57A51D5BDcE188c2295fCA3b4687475a54E65A02);\\n    address public constant VALIDATOR_13 = address(0x777FbA3666fa7747476a34577FcCC404b263E09F);\\n    address public constant VALIDATOR_14 = address(0x2F85824B2B38F179E451988670935d315b5b9692);\\n    address public constant VALIDATOR_15 = address(0xe868bE65C50b61E81A3fC5cB5A7916090B05eb2A);\\n    address public constant VALIDATOR_16 = address(0xB12c5DFA8693a5890c4b5B9145E3CAE1502f17f0);\\n    address public constant VALIDATOR_17 = address(0xe7129A4c7521452511249c26B018fEfbB10d108d);\\n\\n    constructor(uint256 _validatorsCount) StakingBankStatic(_validatorsCount) {}\\n\\n    // solhint-disable-next-line code-complexity\\n    function validators(address _id) external pure override returns (address id, string memory location) {\\n        if (_id == VALIDATOR_0) return (_id, \\\"https://validator.umb.network\\\");\\n        if (_id == VALIDATOR_1) return (_id, \\\"https://validator2.umb.network\\\");\\n        if (_id == VALIDATOR_2) return (_id, \\\"https://umbrella.artemahr.tech\\\");\\n        if (_id == VALIDATOR_3) return (_id, \\\"https://umb.vtabsolutions.com:3030\\\");\\n        if (_id == VALIDATOR_4) return (_id, \\\"https://umb.stakers.world\\\");\\n        if (_id == VALIDATOR_5) return (_id, \\\"https://umbrella.crazywhale.es\\\");\\n        if (_id == VALIDATOR_6) return (_id, \\\"https://umbrella-node.gateomega.com\\\");\\n        if (_id == VALIDATOR_7) return (_id, \\\"https://umb.anorak.technology\\\");\\n        if (_id == VALIDATOR_8) return (_id, \\\"https://umbrella.infstones.io\\\");\\n        if (_id == VALIDATOR_9) return (_id, \\\"https://umb.hashquark.io\\\");\\n        if (_id == VALIDATOR_10) return (_id, \\\"http://umbrella.staking4all.org:3000\\\");\\n        if (_id == VALIDATOR_11) return (_id, \\\"https://umbrella-api.validatrium.club\\\");\\n        if (_id == VALIDATOR_12) return (_id, \\\"http://umbrella.klever.finance:3000\\\");\\n        if (_id == VALIDATOR_13) return (_id, \\\"https://umbnode.blockchainliverpool.com\\\");\\n        if (_id == VALIDATOR_14) return (_id, \\\"https://umb-api.staking.rocks\\\");\\n        if (_id == VALIDATOR_15) return (_id, \\\"https://razumv-umb.razumv.tech\\\");\\n        if (_id == VALIDATOR_16) return (_id, \\\"https://markusrichard-umb.markusrichard.tech\\\");\\n        if (_id == VALIDATOR_17) return (_id, \\\"https://santanika-umb.santanika.tech\\\");\\n\\n        return (address(0), \\\"\\\");\\n    }\\n\\n    function _addresses() internal view override returns (address[] memory) {\\n        address[] memory list = new address[](NUMBER_OF_VALIDATORS);\\n\\n        list[0] = VALIDATOR_0;\\n        list[1] = VALIDATOR_1;\\n        list[2] = VALIDATOR_2;\\n        list[3] = VALIDATOR_3;\\n        list[4] = VALIDATOR_4;\\n        list[5] = VALIDATOR_5;\\n        list[6] = VALIDATOR_6;\\n        list[7] = VALIDATOR_7;\\n        list[8] = VALIDATOR_8;\\n        list[9] = VALIDATOR_9;\\n        list[10] = VALIDATOR_10;\\n        list[11] = VALIDATOR_11;\\n        list[12] = VALIDATOR_12;\\n        list[13] = VALIDATOR_13;\\n        list[14] = VALIDATOR_14;\\n        list[15] = VALIDATOR_15;\\n        list[16] = VALIDATOR_16;\\n        list[17] = VALIDATOR_17;\\n\\n        return list;\\n    }\\n\\n    function _isValidator(address _validator) internal pure override returns (bool) {\\n        return (\\n            _validator == VALIDATOR_0\\n            || _validator == VALIDATOR_1\\n            || _validator == VALIDATOR_2\\n            || _validator == VALIDATOR_3\\n            || _validator == VALIDATOR_4\\n            || _validator == VALIDATOR_5\\n            || _validator == VALIDATOR_6\\n            || _validator == VALIDATOR_7\\n            || _validator == VALIDATOR_8\\n            || _validator == VALIDATOR_9\\n            || _validator == VALIDATOR_10\\n            || _validator == VALIDATOR_11\\n            || _validator == VALIDATOR_12\\n            || _validator == VALIDATOR_13\\n            || _validator == VALIDATOR_14\\n            || _validator == VALIDATOR_15\\n            || _validator == VALIDATOR_16\\n            || _validator == VALIDATOR_17\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xb82aa977d6766872ee5aec7b6cde5110c4e4013989884910e021df33c6934ce5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b5060405162002dd138038062002dd18339818101604052810190620000379190620000a5565b808060808181525050670de0b6b3a76400008162000056919062000106565b60a08181525050505062000167565b600080fd5b6000819050919050565b6200007f816200006a565b81146200008b57600080fd5b50565b6000815190506200009f8162000074565b92915050565b600060208284031215620000be57620000bd62000065565b5b6000620000ce848285016200008e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000113826200006a565b915062000120836200006a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200015c576200015b620000d7565b5b828202905092915050565b60805160a051612c21620001b0600039600081816109830152610bed0152600081816107f20152818161086001528181610c1301528181610d7c0152611c850152612c216000f3fe608060405234801561001057600080fd5b506004361061020e5760003560e01c8062113e0814610213578063015f7ed61461023157806303a1e2241461024f578063095ea7b31461026d5780630db18e371461029d57806317d7de7c146102cd57806318160ddd146102eb5780631aa3a008146103095780631d4f9ce01461031357806323b872dd1461034357806327e235e31461037357806329092d0e146103a35780632e1a7d4d146103bf578063398b056e146103ef578063411ff4971461040d57806345f9f8251461042b57806352b41e351461044957806354755335146104655780635dc4bfd31461048357806369dc7ae4146104a157806370a08231146104bf578063838e7c3a146104ef578063902d55a51461050b5780639031d9131461052957806390ff7e2e14610547578063952c4f1814610565578063989b6996146105835780639f0e9484146105a1578063a15ab08d146105bf578063a39fac12146105db578063a694fc3a146105f9578063a9059cbb14610615578063b2119eac14610645578063b49b084214610663578063c2ee3a0814610681578063db7317771461069f578063dd62ed3e146106bd578063e214a5fc146106ed578063e29349d61461070b578063e2dc7a1a14610729578063e79a198f14610747578063e985e00814610751578063e9fad8ee1461076f578063edf26d9b1461078d578063fa52c7d8146107bd575b600080fd5b61021b6107ee565b60405161022891906124b3565b60405180910390f35b6102396108bf565b6040516102469190612516565b60405180910390f35b6102576108d7565b6040516102649190612516565b60405180910390f35b61028760048036038101906102829190612593565b6108ef565b60405161029491906125ee565b60405180910390f35b6102b760048036038101906102b29190612609565b610923565b6040516102c491906125ee565b60405180910390f35b6102d5610957565b6040516102e2919061264f565b60405180910390f35b6102f361097f565b6040516103009190612679565b60405180910390f35b6103116109a7565b005b61032d600480360381019061032891906126f9565b6109a9565b60405161033a91906125ee565b60405180910390f35b61035d60048036038101906103589190612746565b610a0f565b60405161036a91906125ee565b60405180910390f35b61038d60048036038101906103889190612609565b610a43565b60405161039a9190612679565b60405180910390f35b6103bd60048036038101906103b89190612609565b610a6a565b005b6103d960048036038101906103d49190612799565b610a9c565b6040516103e691906125ee565b60405180910390f35b6103f7610ad0565b6040516104049190612516565b60405180910390f35b610415610ae8565b6040516104229190612516565b60405180910390f35b610433610b00565b6040516104409190612516565b60405180910390f35b610463600480360381019061045e9190612799565b610b18565b005b61046d610b4a565b60405161047a9190612516565b60405180910390f35b61048b610b62565b6040516104989190612516565b60405180910390f35b6104a9610b7a565b6040516104b69190612516565b60405180910390f35b6104d960048036038101906104d49190612609565b610b92565b6040516104e69190612679565b60405180910390f35b6105096004803603810190610504919061281c565b610bb9565b005b610513610beb565b6040516105209190612679565b60405180910390f35b610531610c0f565b60405161053e9190612679565b60405180910390f35b61054f610c37565b60405161055c9190612516565b60405180910390f35b61056d610c4f565b60405161057a9190612516565b60405180910390f35b61058b610c67565b6040516105989190612516565b60405180910390f35b6105a9610c7f565b6040516105b69190612516565b60405180910390f35b6105d960048036038101906105d4919061281c565b610c97565b005b6105e3610cc9565b6040516105f0919061293a565b60405180910390f35b610613600480360381019061060e9190612799565b610cd8565b005b61062f600480360381019061062a9190612593565b610d0a565b60405161063c91906125ee565b60405180910390f35b61064d610d3e565b60405161065a9190612516565b60405180910390f35b61066b610d56565b6040516106789190612516565b60405180910390f35b610689610d6e565b6040516106969190612679565b60405180910390f35b6106a7610d7a565b6040516106b49190612679565b60405180910390f35b6106d760048036038101906106d2919061295c565b610d9e565b6040516106e49190612679565b60405180910390f35b6106f5610dd2565b6040516107029190612516565b60405180910390f35b610713610dea565b6040516107209190612516565b60405180910390f35b610731610e02565b60405161073e9190612516565b60405180910390f35b61074f610e1a565b005b610759610e1c565b6040516107669190612516565b60405180910390f35b610777610e34565b60405161078491906125ee565b60405180910390f35b6107a760048036038101906107a29190612799565b610e68565b6040516107b49190612516565b60405180910390f35b6107d760048036038101906107d29190612609565b610e93565b6040516107e5929190612a35565b60405180910390f35b60607f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff81111561082a57610829612a65565b5b6040519080825280602002602001820160405280156108585781602001602082028036833780820191505090505b50905060005b7f00000000000000000000000000000000000000000000000000000000000000008110156108bb57670de0b6b3a76400008282815181106108a2576108a1612a94565b5b602002602001018181525050808060010191505061085e565b5090565b73cd733e06b06083d52fc5867e8e3432aa5c103a3881565b73501731c6a69803a53ec6c3e12f293c247ce1092b81565b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f5374616b696e6742616e6b000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b565b6000805b83839050811015610a03576109e88484838181106109ce576109cd612a94565b5b90506020020160208101906109e39190612609565b611749565b6109f6576000915050610a09565b80806001019150506109ad565b50600190505b92915050565b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a4e82611749565b610a59576000610a63565b670de0b6b3a76400005b9050919050565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7357a51d5bdce188c2295fca3b4687475a54e65a0281565b73e2422b23e52bc13eba04d7fbb9f332deb43360fb81565b732f85824b2b38f179e451988670935d315b5b969281565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7393fdcab283b0bcac48157590af482e1cfd6af6ac81565b73d56c6a4f64e0bd70260472d1db6cf5825858cb0d81565b73777fba3666fa7747476a34577fccc404b263e09f81565b6000610b9d82611749565b610ba8576000610bb2565b670de0b6b3a76400005b9050919050565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b73220230eda8f50067dd9e4729345dabcce0c6154281565b73e868be65c50b61e81a3fc5cb5a7916090b05eb2a81565b738bf9661f1b247522c75dd0fe84355ad2eff2714481565b73977ba523420110e230643b772fe9cf955e11da7b81565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060610cd3611c7f565b905090565b6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73281754ab58391a478b7aa4e7f39991cfb41118c481565b7357f404ad75e371c1a539589c1efca12e0c6980ad81565b670de0b6b3a764000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73e7129a4c7521452511249c26b018fefbb10d108d81565b73b12c5dfa8693a5890c4b5b9145e3cae1502f17f081565b7342e210b110c6aa49cdfa7cef1444aa471965311181565b565b73b9c63a350a04d8bd245d18928a26ee036352ddd881565b60006040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610e72611c7f565b8281518110610e8457610e83612a94565b5b60200260200101519050919050565b6000606073977ba523420110e230643b772fe9cf955e11da7b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f1e57826040518060400160405280601d81526020017f68747470733a2f2f76616c696461746f722e756d622e6e6574776f726b00000081525091509150611744565b73e2422b23e52bc13eba04d7fbb9f332deb43360fb73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fa557826040518060400160405280601e81526020017f68747470733a2f2f76616c696461746f72322e756d622e6e6574776f726b000081525091509150611744565b7357f404ad75e371c1a539589c1efca12e0c6980ad73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361102c57826040518060400160405280601e81526020017f68747470733a2f2f756d6272656c6c612e617274656d6168722e74656368000081525091509150611744565b73d56c6a4f64e0bd70260472d1db6cf5825858cb0d73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110965782604051806060016040528060228152602001612ae76022913991509150611744565b73220230eda8f50067dd9e4729345dabcce0c6154273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361111d57826040518060400160405280601981526020017f68747470733a2f2f756d622e7374616b6572732e776f726c640000000000000081525091509150611744565b7393fdcab283b0bcac48157590af482e1cfd6af6ac73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111a457826040518060400160405280601e81526020017f68747470733a2f2f756d6272656c6c612e6372617a797768616c652e6573000081525091509150611744565b73cd733e06b06083d52fc5867e8e3432aa5c103a3873ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361120e5782604051806060016040528060238152602001612ac46023913991509150611744565b7342e210b110c6aa49cdfa7cef1444aa471965311173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361129557826040518060400160405280601d81526020017f68747470733a2f2f756d622e616e6f72616b2e746563686e6f6c6f677900000081525091509150611744565b73501731c6a69803a53ec6c3e12f293c247ce1092b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361131c57826040518060400160405280601d81526020017f68747470733a2f2f756d6272656c6c612e696e6673746f6e65732e696f00000081525091509150611744565b738bf9661f1b247522c75dd0fe84355ad2eff2714473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113a357826040518060400160405280601881526020017f68747470733a2f2f756d622e68617368717561726b2e696f000000000000000081525091509150611744565b73281754ab58391a478b7aa4e7f39991cfb41118c473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361140d5782604051806060016040528060248152602001612b096024913991509150611744565b73b9c63a350a04d8bd245d18928a26ee036352ddd873ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114775782604051806060016040528060258152602001612b746025913991509150611744565b7357a51d5bdce188c2295fca3b4687475a54e65a0273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114e15782604051806060016040528060238152602001612b2d6023913991509150611744565b73777fba3666fa7747476a34577fccc404b263e09f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361154b5782604051806060016040528060278152602001612bc56027913991509150611744565b732f85824b2b38f179e451988670935d315b5b969273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115d257826040518060400160405280601d81526020017f68747470733a2f2f756d622d6170692e7374616b696e672e726f636b7300000081525091509150611744565b73e868be65c50b61e81a3fc5cb5a7916090b05eb2a73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361165957826040518060400160405280601e81526020017f68747470733a2f2f72617a756d762d756d622e72617a756d762e74656368000081525091509150611744565b73b12c5dfa8693a5890c4b5b9145e3cae1502f17f073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116c357826040518060600160405280602c8152602001612b99602c913991509150611744565b73e7129a4c7521452511249c26b018fefbb10d108d73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361172d5782604051806060016040528060248152602001612b506024913991509150611744565b600060405180602001604052806000815250915091505b915091565b600073977ba523420110e230643b772fe9cf955e11da7b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806117d8575073e2422b23e52bc13eba04d7fbb9f332deb43360fb73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061182257507357f404ad75e371c1a539589c1efca12e0c6980ad73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061186c575073d56c6a4f64e0bd70260472d1db6cf5825858cb0d73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806118b6575073220230eda8f50067dd9e4729345dabcce0c6154273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061190057507393fdcab283b0bcac48157590af482e1cfd6af6ac73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061194a575073cd733e06b06083d52fc5867e8e3432aa5c103a3873ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061199457507342e210b110c6aa49cdfa7cef1444aa471965311173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806119de575073501731c6a69803a53ec6c3e12f293c247ce1092b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611a285750738bf9661f1b247522c75dd0fe84355ad2eff2714473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611a72575073281754ab58391a478b7aa4e7f39991cfb41118c473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611abc575073b9c63a350a04d8bd245d18928a26ee036352ddd873ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611b0657507357a51d5bdce188c2295fca3b4687475a54e65a0273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611b50575073777fba3666fa7747476a34577fccc404b263e09f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611b9a5750732f85824b2b38f179e451988670935d315b5b969273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611be4575073e868be65c50b61e81a3fc5cb5a7916090b05eb2a73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611c2e575073b12c5dfa8693a5890c4b5b9145e3cae1502f17f073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611c78575073e7129a4c7521452511249c26b018fefbb10d108d73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b9050919050565b606060007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff811115611cbd57611cbc612a65565b5b604051908082528060200260200182016040528015611ceb5781602001602082028036833780820191505090505b50905073977ba523420110e230643b772fe9cf955e11da7b81600081518110611d1757611d16612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073e2422b23e52bc13eba04d7fbb9f332deb43360fb81600181518110611d7a57611d79612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250507357f404ad75e371c1a539589c1efca12e0c6980ad81600281518110611ddd57611ddc612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073d56c6a4f64e0bd70260472d1db6cf5825858cb0d81600381518110611e4057611e3f612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073220230eda8f50067dd9e4729345dabcce0c6154281600481518110611ea357611ea2612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250507393fdcab283b0bcac48157590af482e1cfd6af6ac81600581518110611f0657611f05612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073cd733e06b06083d52fc5867e8e3432aa5c103a3881600681518110611f6957611f68612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250507342e210b110c6aa49cdfa7cef1444aa471965311181600781518110611fcc57611fcb612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073501731c6a69803a53ec6c3e12f293c247ce1092b8160088151811061202f5761202e612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050738bf9661f1b247522c75dd0fe84355ad2eff271448160098151811061209257612091612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073281754ab58391a478b7aa4e7f39991cfb41118c481600a815181106120f5576120f4612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073b9c63a350a04d8bd245d18928a26ee036352ddd881600b8151811061215857612157612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250507357a51d5bdce188c2295fca3b4687475a54e65a0281600c815181106121bb576121ba612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073777fba3666fa7747476a34577fccc404b263e09f81600d8151811061221e5761221d612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050732f85824b2b38f179e451988670935d315b5b969281600e8151811061228157612280612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073e868be65c50b61e81a3fc5cb5a7916090b05eb2a81600f815181106122e4576122e3612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073b12c5dfa8693a5890c4b5b9145e3cae1502f17f08160108151811061234757612346612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073e7129a4c7521452511249c26b018fefbb10d108d816011815181106123aa576123a9612a94565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508091505090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61242a81612417565b82525050565b600061243c8383612421565b60208301905092915050565b6000602082019050919050565b6000612460826123eb565b61246a81856123f6565b935061247583612407565b8060005b838110156124a657815161248d8882612430565b975061249883612448565b925050600181019050612479565b5085935050505092915050565b600060208201905081810360008301526124cd8184612455565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612500826124d5565b9050919050565b612510816124f5565b82525050565b600060208201905061252b6000830184612507565b92915050565b600080fd5b600080fd5b612544816124f5565b811461254f57600080fd5b50565b6000813590506125618161253b565b92915050565b61257081612417565b811461257b57600080fd5b50565b60008135905061258d81612567565b92915050565b600080604083850312156125aa576125a9612531565b5b60006125b885828601612552565b92505060206125c98582860161257e565b9150509250929050565b60008115159050919050565b6125e8816125d3565b82525050565b600060208201905061260360008301846125df565b92915050565b60006020828403121561261f5761261e612531565b5b600061262d84828501612552565b91505092915050565b6000819050919050565b61264981612636565b82525050565b60006020820190506126646000830184612640565b92915050565b61267381612417565b82525050565b600060208201905061268e600083018461266a565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126126b9576126b8612694565b5b8235905067ffffffffffffffff8111156126d6576126d5612699565b5b6020830191508360208202830111156126f2576126f161269e565b5b9250929050565b600080602083850312156127105761270f612531565b5b600083013567ffffffffffffffff81111561272e5761272d612536565b5b61273a858286016126a3565b92509250509250929050565b60008060006060848603121561275f5761275e612531565b5b600061276d86828701612552565b935050602061277e86828701612552565b925050604061278f8682870161257e565b9150509250925092565b6000602082840312156127af576127ae612531565b5b60006127bd8482850161257e565b91505092915050565b60008083601f8401126127dc576127db612694565b5b8235905067ffffffffffffffff8111156127f9576127f8612699565b5b6020830191508360018202830111156128155761281461269e565b5b9250929050565b60008060006040848603121561283557612834612531565b5b600061284386828701612552565b935050602084013567ffffffffffffffff81111561286457612863612536565b5b612870868287016127c6565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6128b1816124f5565b82525050565b60006128c383836128a8565b60208301905092915050565b6000602082019050919050565b60006128e78261287c565b6128f18185612887565b93506128fc83612898565b8060005b8381101561292d57815161291488826128b7565b975061291f836128cf565b925050600181019050612900565b5085935050505092915050565b6000602082019050818103600083015261295481846128dc565b905092915050565b6000806040838503121561297357612972612531565b5b600061298185828601612552565b925050602061299285828601612552565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156129d65780820151818401526020810190506129bb565b838111156129e5576000848401525b50505050565b6000601f19601f8301169050919050565b6000612a078261299c565b612a1181856129a7565b9350612a218185602086016129b8565b612a2a816129eb565b840191505092915050565b6000604082019050612a4a6000830185612507565b8181036020830152612a5c81846129fc565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe68747470733a2f2f756d6272656c6c612d6e6f64652e676174656f6d6567612e636f6d68747470733a2f2f756d622e76746162736f6c7574696f6e732e636f6d3a33303330687474703a2f2f756d6272656c6c612e7374616b696e6734616c6c2e6f72673a33303030687474703a2f2f756d6272656c6c612e6b6c657665722e66696e616e63653a3330303068747470733a2f2f73616e74616e696b612d756d622e73616e74616e696b612e7465636868747470733a2f2f756d6272656c6c612d6170692e76616c696461747269756d2e636c756268747470733a2f2f6d61726b7573726963686172642d756d622e6d61726b7573726963686172642e7465636868747470733a2f2f756d626e6f64652e626c6f636b636861696e6c69766572706f6f6c2e636f6da2646970667358221220095a8debec8ffebcdaf94c5236999fbc733fc3ee23aed40d2ce0825b09b7420864736f6c634300080d0033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addresses(uint256)": {
        "details": "gets validator address for provided index",
        "params": {
          "_ix": "index in array of list of all validators wallets"
        }
      },
      "balanceOf(address)": {
        "details": "to follow ERC20 interface"
      },
      "exit()": {
        "details": "unstake and withdraw all tokens"
      },
      "getName()": {
        "details": "to follow Registrable interface"
      },
      "getNumberOfValidators()": {
        "returns": {
          "_0": "total number of registered validators (with and without balance)"
        }
      },
      "register()": {
        "details": "to follow Registrable interface"
      },
      "totalSupply()": {
        "details": "to follow ERC20 interface"
      },
      "unregister()": {
        "details": "to follow Registrable interface"
      },
      "validators(address)": {
        "params": {
          "_id": "address of validator"
        },
        "returns": {
          "id": "address of validator",
          "location": "URL of validator"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}